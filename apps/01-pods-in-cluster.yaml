apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: pods-in-cluster
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "0"
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=zero"]
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - matrix:
        generators:
          - clusters:
              selector:
                matchExpressions:
                  - { key: "cluster", operator: In, values: ["in-cluster"] }
          - git:
              repoURL: https://github.com/moaaznoaman/argocd-variables.git
              revision: "{{ .metadata.labels.envBranch }}" # HEAD
              directories:
                - path: environments/*
                - path: environments/prod
                  exclude: true
  template:
    metadata:
      name: "pods-in-cluster"
      namespace: argocd
      labels:
        env: "{{ .metadata.labels.env }}"
        app: "infra"
        # prod: "true"
        # envType: "{{ .metadata.labels.env_type }}"
    spec:
      project: infra
      sources:
        - repoURL: git@github.com:moaaznoaman/argocd-variables.git
          targetRevision: "{{ .metadata.labels.envBranch }}"
          ref: values
        - repoURL: git@github.com:moaaznoaman/argocd-variables-new.git
          targetRevision: HEAD
          ref: valuesnew
        - repoURL: git@github.com:moaaznoaman/argocd.git
          path: charts/pods
          targetRevision: HEAD
          helm:
            valueFiles:
              - "values.yaml"
              - "$values/environments/in-cluster/values.yaml"
              - "$valuesnew/environments/in-cluster/values.yaml"
      destination:
        name: "{{.name}}" # "{{ .metadata.labels.name }}" # https://kubernetes.default.svc
        namespace: "in-cluster" #TODO: check this
      syncPolicy:
        automated:
          selfHeal: true
          prune: false
        syncOptions:
          - preserveResourcesOnDeletion=true
          - CreateNamespace=true