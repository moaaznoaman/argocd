---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-ansible-playbook
  namespace: monitoring
data:
  main.yaml: |
    ---
    - name: Update Keycloak Realm Configurations
      hosts: localhost
      gather_facts: no
      connection: local
      vars:
        grafana_url: "http://prometheus-grafana.monitoring.svc:80"
        # grafana_url_new: "{{ `{{ lookup('env', 'grafana_url') }}` }}"
        grafana_admin_user: "admin"
        grafana_admin_password: "{{ `{{ lookup('env', 'admin-password') }}` }}"
        grafana_viewer_user: "viewer"
        grafana_viewer_password: "{{ `{{ lookup('env', 'viewer-password') }}` }}"
        new_user_email: "viewer@local"
      tasks:
        - name: Create a user in Grafana
          uri:
            url: "{{ `{{ grafana_url }}` }}/api/admin/users"
            method: POST
            user: "{{ `{{ grafana_admin_user }}` }}"
            password: "{{ `{{ grafana_admin_password }}` }}"
            force_basic_auth: yes
            headers:
              Content-Type: "application/json"
            body: |
              {
                "name": "{{ `{{ grafana_viewer_user }}` }}",
                "email": "{{ `{{ new_user_email }}` }}",
                "login": "{{ `{{ grafana_viewer_user }}` }}",
                "password": "{{ `{{ grafana_viewer_password }}` }}"
              }
            body_format: json
            status_code: [200, 412]
          register: create_user_response
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/sync-wave: '3'
    # argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
  labels:
    app: grafana-user-register
  name: grafana-user-register
  namespace: {{ .Values.namespace }}
spec:
  template:
    spec:
      securityContext:
        runAsUser: 1000
      restartPolicy: Never
      backoffLimit: 3
      retryLimit: 3
      volumes:
        - name: grafana-playbook
          configMap:
            name: grafana-ansible-playbook
        - name: tmpdir
          emptyDir: {}
      containers:
        - name: ansible-grafana
          image: docker.io/alpine/ansible:2.18.1
          command:
            - ansible-playbook
          args:
            - "-i"
            - "localhost,"
            - "/playbooks/main.yaml"
            # - "-vv"
          env:
            - name: grafana_url
              value: {{ printf "grafana.%s" .Values.envDomain | quote }}
          envFrom:
            - secretRef:
                name: grafana-secret-creds
            - secretRef:
                name: grafana-viewer-creds
          volumeMounts:
            - name: grafana-playbook
              mountPath: /playbooks
            - name: tmpdir
              mountPath: /.ansible
  podFailurePolicy:
    rules:
      - action: FailJob
        onExitCodes:
          containerName: ansible-grafana
          operator: NotIn
          values: [0]
        onPodConditions: null